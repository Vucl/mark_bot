import time
import requests
import random
import os

OWNER_ID = -231062776  # ID —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –í–ö (—Å –º–∏–Ω—É—Å–æ–º)
API_VERSION = '5.131'
INTERVAL_SECONDS = 3 * 3600 + 26 * 60  # 3 —á–∞—Å–∞ 26 –º–∏–Ω—É—Ç

ACCESS_TOKEN = os.environ.get("ACCESS_TOKEN")
if not ACCESS_TOKEN:
    raise RuntimeError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ACCESS_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞.")

def load_last_post_id():
    if os.path.exists("last_post.txt"):
        with open("last_post.txt", "r") as f:
            try:
                return int(f.read().strip())
            except:
                return 0
    return 0

def save_last_post_id(post_id):
    with open("last_post.txt", "w") as f:
        f.write(str(post_id))

def get_latest_post_id():
    response = requests.get("https://api.vk.com/method/wall.get", params={
        "owner_id": OWNER_ID,
        "count": 5,
        "access_token": ACCESS_TOKEN,
        "v": API_VERSION
    })
    data = response.json()
    try:
        for item in data['response']['items']:
            if not item.get('is_pinned', 0):  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
                return item['id']
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", data)
        return None

def get_random_comment():
    try:
        with open("comments.txt", "r", encoding="utf-8") as f:
            lines = [line.strip() for line in f if line.strip()]
        if not lines:
            raise ValueError("–§–∞–π–ª comments.txt –ø—É—Å—Ç.")
        return random.choice(lines)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è comments.txt:", e)
        return None

def post_exists(post_id):
    response = requests.get("https://api.vk.com/method/wall.getById", params={
        "posts": f"{OWNER_ID}_{post_id}",
        "access_token": ACCESS_TOKEN,
        "v": API_VERSION
    })
    data = response.json()
    if "response" in data and len(data["response"]) > 0:
        return True
    else:
        print("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:", data)
        return False

def post_comment(post_id, message):
    response = requests.get("https://api.vk.com/method/wall.createComment", params={
        "owner_id": OWNER_ID,
        "post_id": post_id,
        "message": message,
        "access_token": ACCESS_TOKEN,
        "v": API_VERSION
    })
    print("–û—Ç–≤–µ—Ç VK –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", response.json())

def main_loop():
    while True:
        print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ ===")
        last_post_id = load_last_post_id()
        latest_post_id = get_latest_post_id()

        if latest_post_id is None:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞.")
        elif latest_post_id > last_post_id:
            print(f"üîî –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø–æ—Å—Ç: ID = {latest_post_id}")
            if post_exists(latest_post_id):
                comment = get_random_comment()
                if comment:
                    print(f"üí¨ –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")
                    post_comment(latest_post_id, comment)
                else:
                    print("‚ö†Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –≤—ã–±—Ä–∞–Ω.")
            else:
                print(f"‚ö†Ô∏è –ü–æ—Å—Ç {latest_post_id} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
            save_last_post_id(latest_post_id)
        else:
            print("‚úÖ –ù–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç.")

        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {INTERVAL_SECONDS // 60} –º–∏–Ω—É—Ç...")
        time.sleep(INTERVAL_SECONDS)

if __name__ == "__main__":
    main_loop()
